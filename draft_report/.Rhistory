# fviz_dend(eclust(bulkpc, "hclust", k = 3, graph = FALSE), palette = "jco", rect = TRUE, show_labels = FALSE)
fviz_dend(bulk_hclust_pca, k = 5, # Cut in four groups
cex = 0.5, # label size
k_colors = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07", "#800080"),
color_labels_by_k = TRUE, # color labels by groups
rect = TRUE # Add rectangle around groups
)
library(dendextend)
dend = as.dendrogram(single_hclust_pca)
groupCodes = cell_type(single, F)
colorCodes = c(A549 = "#2E9FDF", GM12878 = "#00AFBB", H1 = "#E7B800", IMR90 = "#FC4E07", K562 = "#800080")
labels_colors(dend) = colorCodes[groupCodes][order.dendrogram(dend)]
single_pchc = data.frame(singlepca$x, cluster = factor(cutree(single_hclust_pca, k = 5)))
p1 = ggplot(single_pchc, aes(x=PC1, y=PC2, color=cluster)) + geom_point()+ labs(title = "single hclust")
single_pchc2 = data.frame(singlepca$x, type = factor(cell_type(single, group = F)))
p2 = ggplot(single_pckm2, aes(x=PC1, y=PC2, color=type)) + geom_point()+ labs(title = "single type")
return(list(dend, p1, p2))
}
plo3 = single_hc(single_nohk)
plo3 = single_hc(single_nohk)
plot(out3[[1]])
pl2 = ggarrange(out3[[2]], out3[[3]], ncol = 2, nrow = 1)
plo2 = ggarrange(sim2[[2]], sim2[[3]], ncol = 2, nrow = 1)
sim2 = single_hc(single_nohk)
sim2 = single_hc(single_nohk)
plot(sim2[[1]])
plo2 = ggarrange(sim2[[2]], sim2[[3]], ncol = 2, nrow = 1)
ggsave("/Users/gege/Desktop/hc.pdf", plo2, width = 8, height = 2.5)
save_plot("/Users/gege/Desktop/hc.pdf", plot(sim2[[1]]), base_aspect_ratio = 1.5)
ggsave("/Users/gege/Desktop/hc.pdf", plo2, width = 8, height = 2.5)
ggsave("/Users/gege/Desktop/hcpca.pdf", pl2, width = 8, height = 2.5)
save_plot("/Users/gege/Desktop/hcpca_dend.pdf", plot(out3[[1]]), base_aspect_ratio = 1.5)
pc1 = single_pca(single_nohk)
pc2 = single_pca(single)
pc1[[2]]
diff(pc1[[2]], pc2[[2]])
autoplot(pc1[[1]], data = t(single_nohk))
autoplot(pc1[[1]], data = t(single_nohk))
ncol(single)
table(colnames(single))
View(single)
length(hkgene)
log(2)
log(2)/2
1 - 2/21
require(gdata)
read.xls()
data = read.xls("/Users/gege/Dropbox/graduate/Survival\ Analysis/hw/computing\ hw/pbcdata.xls")
View(data)
class(Data)
class(data)
View(data)
head(data)
nrow(data)
cen = c(5, 105, 111, 120, 125, 158, 183, 241, 246, 247, 254, 263, 264, 265, 274, 288, 291, 295, 297, 345, 361, 362, 375, 380, 383)
ncol(data)
pbc.data = read.csv("/Users/gege/Dropbox/graduate/Survival\ Analysis/hw/computing\ hw/pbcdata.xls", header = TRUE, sep = ",")
data = read.xls("/Users/gege/Dropbox/graduate/Survival\ Analysis/hw/computing\ hw/pbcdata.xls")
View(data)
colnames(data)
names(data)
attach(data)
nrow(data)
d = na.omit(data)
d
table(d$status)
View(d)
table(d$trt)
colnames(d)
d$time
colnames(d)
unique(d$trt)
tr = d[d$trt == 1, ]
con = d[d$trt == 2, ]
tr = d[d$trt == 2, ]
con = d[d$trt == 1, ]
tr = d[d$trt == 2, ]
con = d[d$trt == 1, ]
dat = tr
1 * (cen > 0)
delta = rep(0, nrow(data))
delta = rep(1, nrow(data))
delta[cen] = 0
delta
length(delta)
length(cen)
sum(delta)
data$censor = delta
d = na.omit(data)
tr = d[d$trt == 2, ]
con = d[d$trt == 1, ]
dat = tr
sum(dat$censor)/sum(dat$time)
tr = d[d$trt == 2, ]
con = d[d$trt == 1, ]
theta = function(dat){return(sum(dat$censor)/sum(dat$time))}
theta_tr = theta(tr)
theta_con = theta(con)
theta_tr
theta_con
ci = c(t - 1.96 * sd(v), t + 1.96 * sd(v))
theta = function(dat){
delta = dat$censor
x = dat$time
t = sum(delta)/x
v = (sum(x))^2/sum(delta)
ci = c(t - 1.96 * sd(v), t + 1.96 * sd(v))
return(c(t, ci))
}
theta_tr = theta(tr)
theta_con = theta(con)
theta_tr
dat = tr
delta = dat$censor
delta
x
x = dat$time
t = sum(delta)/x
v = (sum(x))^2/sum(delta)
ci = c(t - 1.96 * sd(v), t + 1.96 * sd(v))
x
t
theta = function(dat){
dat = tr
delta = dat$censor
x = dat$time
t = sum(delta)/sum(x)
v = (sum(x))^2/sum(delta)
ci = c(t - 1.96 * sd(v), t + 1.96 * sd(v))
return(c(t, ci))
}
theta_tr = theta(tr)
theta_con = theta(con)
theta_tr
dat = tr
delta = dat$censor
x = dat$time
t = sum(delta)/sum(x)
v = (sum(x))^2/sum(delta)
v
sd(v)
v
sd(4)
sd(1)
sd = (4)
sd(4)
sd(4)
sd(4)
library(stats)
sd(4)
sd(1:2) ^ 2
sd(1:2)
sd(1, 3)
sd(1, 2)
sd(1:2)
tr = d[d$trt == 2, ]
require(gdata)
data = read.xls("/Users/gege/Dropbox/graduate/Survival\ Analysis/hw/computing\ hw/pbcdata.xls")
cen = c(5, 105, 111, 120, 125, 158, 183, 241, 246, 247, 254, 263, 264, 265, 274, 288, 291, 295, 297, 345, 361, 362, 375, 380, 383)
delta = rep(1, nrow(data))
delta[cen] = 0
names(data)
attach(data)
data$censor = delta
d = na.omit(data)
# table(d$trt)
tr = d[d$trt == 2, ]
con = d[d$trt == 1, ]
theta = function(dat){
dat = tr
delta = dat$censor
x = dat$time
t = sum(delta)/sum(x)
v = (sum(x))^2/sum(delta)
ci = c(t - 1.96 * sqrt(v), t + 1.96 * sqrt(v))
return(c(t, ci))
}
theta_tr = theta(tr)
theta_con = theta(con)
theta_tr
theta_con
sqrt(v)
dat = tr
delta = dat$censor
x = dat$time
t = sum(delta)/sum(x)
v = (sum(x))^2/sum(delta)
v
sqrt(v)
t
v = sum(delta)/(sum(x))^2
tr = d[d$trt == 2, ]
con = d[d$trt == 1, ]
theta = function(dat){
dat = tr
delta = dat$censor
x = dat$time
t = sum(delta)/sum(x)
v = sum(delta)/(sum(x))^2
ci = c(t - 1.96 * sqrt(v), t + 1.96 * sqrt(v))
return(c(t, ci))
}
theta_tr = theta(tr)
theta_con = theta(con)
theta_tr
theta_con
library(survival)
sur_tr = Surv(tr$time, tr$censor)
sur_con = Surv(con$time, con$censor)
sur = Surv(data$time, data$censor)
grp = data$trt - 1
km = survfit(sur ~ grp)
plot(km, conf.int = T, col = c("blue", "red"), main = "KM estimates by treatment and control group", xlab = "day", ylab = "Survival function")
max(data$time)
min(data$time)
t = seq(from = min(data$time), to = max(data$time), by = 1000)
plot(km, conf.int = T, col = c("blue", "red"), main = "KM estimates by treatment and control group", xlab = "day", ylab = "Survival function")
legend("bottomright", "(x,y)", pch = 1, title = "bottomright")
plot(km, conf.int = T, col = c("blue", "red"), main = "KM estimates by treatment and control group", xlab = "day", ylab = "Survival function")
legend("bottomright", "(x,y)", pch = 1, title = "bottomright")
legend("bottomright", c("control", "treatment"), col = grp)
plot(km, conf.int = T, col = c("blue", "red"), main = "KM estimates by treatment and control group", xlab = "day", ylab = "Survival function")
legend("bottomright", c("control", "treatment"), col = grp)
legend("bottomright", c("control", "treatment"), lty=c(1,1), lwd=c(2.5,2.5),col=c(“blue”,”red”)))
plot(km, conf.int = T, col = c("blue", "red"), main = "KM estimates by treatment and control group", xlab = "day", ylab = "Survival function")
legend("bottomright", c("control", "treatment"), lty=c(1,1), lwd=c(2.5,2.5),col=c(“blue”,”red”))
plot(km, conf.int = T, col = c("blue", "red"), main = "KM estimates by treatment and control group", xlab = "day", ylab = "Survival function")
legend("bottomright", c("control", "treatment"), lty=c(1,1), lwd=c(2.5,2.5),col=c('blue','red'))
legend("topright", c("control", "treatment"), lty=c(1,1), lwd=c(1, 1),col=c('blue','red'))
plot(km, conf.int = T, col = c("blue", "red"), main = "KM estimates by treatment and control group", xlab = "day", ylab = "Survival function")
legend("topright", c("control", "treatment"), lty=c(1,1), lwd=c(1, 1),col=c('blue','red'))
y = theta_con[1]
y
exp(1)
y = exp(theta_con[1] * t)
length(y)
t = seq(from = min(data$time), to = max(data$time), by = 1000)
y = exp(theta_con[1] * t)
length(y)
theta_con[1]
t
t = seq(from = min(data$time), to = max(data$time), by = 0.5)
y = exp(theta_con[1] * t)
y
plot(t, y)
y = exp(-theta_con[1] * t)
plot(t, y)
plot(t, y, col = "blue", main = "Survival based on exponential distribution", xlab = "day", ylab = "Survival function")
plot(t, y, col = "blue", main = "Survival based on exponential distribution", xlab = "day", ylab = "Survival function", type = l)
t = seq(from = min(data$time), to = max(data$time), by = 0.5)
y = exp(-theta_con[1] * t)
plot(t, y, col = "blue", main = "Survival based on exponential distribution", xlab = "day", ylab = "Survival function", type = l)
plot(t, y, col = "blue", main = "Survival based on exponential distribution", xlab = "day", ylab = "Survival function", type = "l")
t = seq(from = min(data$time), to = max(data$time), by = 0.5)
for (i in 1:3){
y[[i]] = exp(-theta_con[i] * t)
}
y = list()
t = seq(from = min(data$time), to = max(data$time), by = 0.5)
y = list()
for (i in 1:3){
y[[i]] = exp(-theta_con[i] * t)
}
plot(t, y[[1]], col = "blue", main = "Survival based on exponential distribution", xlab = "day", ylab = "Survival function", type = "l")
lines(t, y[[2]], col = "blue", main = "Survival based on exponential distribution", xlab = "day", ylab = "Survival function", type = "l", lty=2)
t = seq(from = min(data$time), to = max(data$time), by = 1)
y = list()
for (i in 1:3){
y[[i]] = exp(-theta_con[i] * t)
}
plot(t, y[[1]], col = "blue", main = "Survival based on exponential distribution", xlab = "day", ylab = "Survival function", type = "l")
lines(t, y[[2]], col = "blue", main = "Survival based on exponential distribution", xlab = "day", ylab = "Survival function", type = "l", lty=2)
t = seq(from = min(data$time), to = max(data$time), by = 5)
y = list()
for (i in 1:3){
y[[i]] = exp(-theta_con[i] * t)
}
plot(t, y[[1]], col = "blue", main = "Survival based on exponential distribution", xlab = "day", ylab = "Survival function", type = "l")
lines(t, y[[2]], col = "blue", main = "Survival based on exponential distribution", xlab = "day", ylab = "Survival function", type = "l", lty=2)
t = seq(from = min(data$time), to = max(data$time), by = 5)
y = list()
for (i in 1:3){
y[[i]] = exp(-theta_con[i] * t)
}
plot(t, y[[1]], col = "blue", main = "Survival based on exponential distribution", xlab = "day", ylab = "Survival function", type = "l")
lines(t, y[[2]], col = "blue", main = "Survival based on exponential distribution", xlab = "day", ylab = "Survival function", type = "l", lty=2)
lines(t, y[[3]], col = "blue", main = "Survival based on exponential distribution", xlab = "day", ylab = "Survival function", type = "l", lty=2)
z = list()
for (i in 1:3){
z[[i]] = exp(-theta_tr[i] * t)
}
t = seq(from = min(data$time), to = max(data$time), by = 5)
y = list()
for (i in 1:3){
y[[i]] = exp(-theta_con[i] * t)
}
z = list()
for (i in 1:3){
z[[i]] = exp(-theta_tr[i] * t)
}
plot(t, y[[1]], col = "blue", main = "Survival based on exponential distribution", xlab = "day", ylab = "Survival function", type = "l")
lines(t, y[[2]], col = "blue", type = "l", lty=2)
lines(t, y[[3]], col = "blue", type = "l", lty=2)
lines(t, z[[1]], col = "red", type = "l")
lines(t, z[[2]], col = "red", type = "l", lty=2)
lines(t, z[[3]], col = "red", type = "l", lty=2)
t = seq(from = min(data$time), to = max(data$time), by = 5)
y = list()
for (i in 1:3){
y[[i]] = exp(-theta_con[i] * t)
}
z = list()
for (i in 1:3){
z[[i]] = exp(-theta_tr[i] * t)
}
plot(t, y[[1]], col = "blue", main = "Survival based on exponential distribution", xlab = "day", ylab = "Survival function", type = "l")
lines(t, y[[2]], col = "blue", type = "l", lty=2)
lines(t, y[[3]], col = "blue", type = "l", lty=2)
lines(t, z[[1]], col = "red", type = "l")
lines(t, z[[2]], col = "red", type = "l", lty=2)
lines(t, z[[3]], col = "red", type = "l", lty=2)
plot(t, y[[1]], col = "blue", main = "Survival based on exponential distribution", xlab = "day", ylab = "Survival function", type = "l")
lines(t, y[[2]], col = "blue", type = "l", lty=2)
lines(t, y[[3]], col = "blue", type = "l", lty=2)
lines(t, z[[1]], col = "red", type = "l")
y[[1]] == z[[1]]
theta_tr
theta_con
tr = d[d$trt == 2, ]
con = d[d$trt == 1, ]
theta = function(dat){
delta = dat$censor
x = dat$time
t = sum(delta)/sum(x)
v = sum(delta)/(sum(x))^2
ci = c(t - 1.96 * sqrt(v), t + 1.96 * sqrt(v))
return(c(t, ci))
}
theta_tr = theta(tr)
theta_con = theta(con)
theta_tr
theta_con
t = seq(from = min(data$time), to = max(data$time), by = 5)
y = list()
for (i in 1:3){
y[[i]] = exp(-theta_con[i] * t)
}
z = list()
for (i in 1:3){
z[[i]] = exp(-theta_tr[i] * t)
}
plot(t, y[[1]], col = "blue", main = "Survival based on exponential distribution", xlab = "day", ylab = "Survival function", type = "l")
lines(t, y[[2]], col = "blue", type = "l", lty=2)
lines(t, y[[3]], col = "blue", type = "l", lty=2)
lines(t, z[[1]], col = "red", type = "l")
lines(t, z[[2]], col = "red", type = "l", lty=2)
lines(t, z[[3]], col = "red", type = "l", lty=2)
out = as.data.frame(theta_tr, theta_con)
out = as.data.frame(rbind(theta_tr, theta_con))
out
colnames(out) = c("estimated theta", "lower 95% CI", "upper 95% CI")
out
t = seq(from = min(data$time), to = max(data$time), by = 5)
y = list()
for (i in 1:3){
y[[i]] = exp(-theta_con[i] * t)
}
z = list()
for (i in 1:3){
z[[i]] = exp(-theta_tr[i] * t)
}
plot(t, y[[1]], col = "blue", main = "Survival based on exponential distribution", xlab = "day", ylab = "Survival function", type = "l")
lines(t, y[[2]], col = "blue", type = "l", lty=2)
lines(t, y[[3]], col = "blue", type = "l", lty=2)
lines(t, z[[1]], col = "red", type = "l")
lines(t, z[[2]], col = "red", type = "l", lty=2)
lines(t, z[[3]], col = "red", type = "l", lty=2)
tr = d[d$trt == 2, ]
con = d[d$trt == 1, ]
theta = function(dat){
delta = dat$censor
x = dat$time
t = sum(delta)/sum(x)
v = sum(delta)/(sum(x))^2
ci = c(t - 1.96 * sqrt(v), t + 1.96 * sqrt(v))
return(c(t, ci))
}
theta_tr = theta(tr)
theta_con = theta(con)
out = as.data.frame(rbind(theta_tr, theta_con))
colnames(out) = c("estimated theta", "lower 95% CI", "upper 95% CI")
out
t = seq(from = min(data$time), to = max(data$time), by = 5)
y = list()
for (i in 1:3){
y[[i]] = exp(-theta_con[i] * t)
}
z = list()
for (i in 1:3){
z[[i]] = exp(-theta_tr[i] * t)
}
plot(t, y[[1]], col = "blue", main = "Survival based on exponential distribution", xlab = "day", ylab = "Survival function", type = "l")
lines(t, y[[2]], col = "blue", type = "l", lty=2)
lines(t, y[[3]], col = "blue", type = "l", lty=2)
lines(t, z[[1]], col = "red", type = "l")
lines(t, z[[2]], col = "red", type = "l", lty=2)
lines(t, z[[3]], col = "red", type = "l", lty=2)
km
abline(x = 0.5)
library(survival)
sur = Surv(data$time, data$censor)
grp = data$trt - 1
km = survfit(sur ~ grp)
plot(km, conf.int = T, col = c("blue", "red"), main = "KM estimates by treatment and control group", xlab = "day", ylab = "Survival function")
legend("topright", c("control", "treatment"), lty=c(1,1), lwd=c(1, 1),col=c('blue','red'))
abline(x = 0.5)
library(survival)
sur = Surv(data$time, data$censor)
grp = data$trt - 1
km = survfit(sur ~ grp)
plot(km, conf.int = T, col = c("blue", "red"), main = "KM estimates by treatment and control group", xlab = "day", ylab = "Survival function")
legend("topright", c("control", "treatment"), lty=c(1,1), lwd=c(1, 1),col=c('blue','red'))
abline(0.5)
abline(0, 0.5)
library(survival)
sur = Surv(data$time, data$censor)
grp = data$trt - 1
km = survfit(sur ~ grp)
plot(km, conf.int = T, col = c("blue", "red"), main = "KM estimates by treatment and control group", xlab = "day", ylab = "Survival function")
legend("topright", c("control", "treatment"), lty=c(1,1), lwd=c(1, 1),col=c('blue','red'))
abline(0, 0.5)
abline(0.5, 0)
library(survival)
sur = Surv(data$time, data$censor)
grp = data$trt - 1
km = survfit(sur ~ grp)
plot(km, conf.int = T, col = c("blue", "red"), main = "KM estimates by treatment and control group", xlab = "day", ylab = "Survival function")
legend("topright", c("control", "treatment"), lty=c(1,1), lwd=c(1, 1),col=c('blue','red'))
abline(0.5, 0)
summary(km)
t = seq(from = min(data$time), to = max(data$time), by = 5)
y = list()
for (i in 1:3){
y[[i]] = exp(-theta_con[i] * t)
}
z = list()
for (i in 1:3){
z[[i]] = exp(-theta_tr[i] * t)
}
plot(t, y[[1]], col = "blue", main = "Survival based on exponential distribution", xlab = "day", ylab = "Survival function", type = "l")
lines(t, y[[2]], col = "blue", type = "l", lty=2)
lines(t, y[[3]], col = "blue", type = "l", lty=2)
lines(t, z[[1]], col = "red", type = "l")
lines(t, z[[2]], col = "red", type = "l", lty=2)
lines(t, z[[3]], col = "red", type = "l", lty=2)
library(survival)
sur = Surv(data$time, data$censor)
grp = data$trt - 1
km = survfit(sur ~ grp)
plot(km, conf.int = T, col = c("blue", "red"), main = "KM estimates by treatment and control group", xlab = "day", ylab = "Survival function")
legend("topright", c("control", "treatment"), lty=c(1,1), lwd=c(1, 1),col=c('blue','red'))
abline(0.5, 0)
View(D)
View(d)
logrank = survdiff(sur ~ grp)
logrank
library(survival)
sur = Surv(d$time, d$censor)
grp = data$trt - 1
km = survfit(sur ~ grp)
t = seq(from = min(d$time), to = max(d$time), by = 5)
y = list()
for (i in 1:3){
y[[i]] = exp(-theta_con[i] * t)
}
z = list()
for (i in 1:3){
z[[i]] = exp(-theta_tr[i] * t)
}
plot(t, y[[1]], col = "blue", main = "Survival based on exponential distribution", xlab = "day", ylab = "Survival function", type = "l")
lines(t, y[[2]], col = "blue", type = "l", lty=2)
lines(t, y[[3]], col = "blue", type = "l", lty=2)
lines(t, z[[1]], col = "red", type = "l")
lines(t, z[[2]], col = "red", type = "l", lty=2)
lines(t, z[[3]], col = "red", type = "l", lty=2)
library(survival)
sur = Surv(d$time, d$censor)
grp = data$trt - 1
km = survfit(sur ~ grp)
library(survival)
sur = Surv(d$time, d$censor)
grp = data$trt - 1
km = survfit(sur ~ grp)
library(survival)
sur = Surv(d$time, d$censor)
grp = d$trt - 1
km = survfit(sur ~ grp)
plot(km, conf.int = T, col = c("blue", "red"), main = "KM estimates by treatment and control group", xlab = "day", ylab = "Survival function")
legend("topright", c("control", "treatment"), lty=c(1,1), lwd=c(1, 1),col=c('blue','red'))
abline(0.5, 0)
logrank = survdiff(sur ~ grp)
logrank
cox = coxph(surv ~ grp, ties = "breslow")
cox = coxph(sur ~ grp, ties = "breslow")
summary(myfit1)
summary(cox)
cox = coxph(sur ~ grp, ties = "breslow")
summary(cox)
colnames(d)
mycox = coxph(sur ~ grp + d$age + d$albumin + d$alk.phos + d$ascites + d$edema + d$hepato + d$platelet + d$protime + d$sex + d$spiders, ties = "breslow")
summary(cox)
summary(mycox)
